// returns an image as a 2d array of RGB values


package sand.box;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.imageio.ImageReadParam;
import javax.imageio.ImageReader;
import javax.imageio.stream.ImageInputStream;


public class Main {
    public static void main(String args[]) throws IOException {
        // means that the image might have not been read properly
        BufferedImage img = null;
        img = ImageIO.read(new File("C:\\Users\\Ashok\\Pictures\\gc.jpg"));
        System.out.println("the numpy style image is ... " + 
                convertImage(img) + " and the height is ... " +
                heightChecker(convertImage(img)));
    }

    public static int heightChecker(ArrayList<ArrayList> img){
        return img.size();
    }
    
    public static ArrayList<ArrayList> convertImage(BufferedImage img) throws IOException {
        ArrayList<ArrayList> overall_list = new ArrayList<>();
        // ArrayList of ArrayLists lol
        int width = img.getWidth();
        int height = img.getHeight();
        for (int row = 0; row < height; row++) {
            ArrayList<Integer> row_list = new ArrayList<>();
            for (int column = 0; column < width; column++) {
                row_list.add(img.getRGB(row, column));
            }
            overall_list.add(row_list); // so I get a 2d numpy array style
            // ... array of the pixels
            // don't want the old vals to be added back in again
        }
        return overall_list;
    }
}


